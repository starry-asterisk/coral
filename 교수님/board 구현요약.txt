1.프로젝트 생성시 co.kr.woong으로 시작함

2. pom.xml 설정(mysql  -> oracle 변경해야함)
<properties>
    	<java-version>1.8</java-version>
	<org.springframework-version>4.3.3.RELEASE</org.springframework-version>
	<org.aspectj-version>1.8.9</org.aspectj-version>
	<org.slf4j-version>1.6.6</org.slf4j-version>
</properties>
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<!-- mybatis -->
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.3.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.4.4</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.16</version>
		</dependency>
		<!-- jdbc -->
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>




3. spring 환경설정 : 오라클 또는 mySql/마리아DB 등으로 설정
   root-context.xml  
       -> 데이터소스 연결 및 데이터베이스 연결설정
       -> mybatis 연결설정
                         
    servlet-context.xml 

4. 데이터베이스에 테이블 생성

5. 연결여부 테스트  		

5-2. 자바소스 , 웹소스 만들어서 게시판 만들기
boardMapper설정 
1) 게시글 쓰기 (insert)
    id : write   요청내용(parameterType) : BoardVO	 

2) 게시글 수정 (update)
    id : update  요청내용(parameterType) : BoardVO

3) 게시글 삭제 (delete)
    id : delete  요청내용(parameterType) : int     (bno글번호)

4) 게시글 읽기 (select)
    id : view  요청내용(parameterType) : int     (bno글번호)
               응답내용(resultType) : BoardVO

5) 전체 게시글 보기(목록-select)
    id : list  응답내용(resultType) : BoardVO

--------------------------------------------------------------
         클라이언트 요청        Service            view(jsp)
--------------------------------------------------------------
글쓰기    board/write :GET        -                board/write  
          board/reg   :POST     service.write()     board/list

글목록    board/list            service.list()      board/list 

글읽기    board/view            service.view()      board/view

글수정    board/update : GET    service.view()      board/view 
          board/update : POST   service.update()    board/list  

글삭제    board/delect          service.delete()      board/list 

----------

board.zip 의 테이블 설계 : tbl_board

이전 request에 의한 방식보다 Model 방식으로 쉽게 구현가능하다.

전송해야할 데이터가 많은경우 즉 파라미터가 1개 이상인경우

Map 또는 bean(VO)를 만들어서 사용하는게 편하다.

(2개의 테이블에서 내용을 합쳐서(조인) 전달받을려고 한다 -> Map이나 bean을 만들자!)
